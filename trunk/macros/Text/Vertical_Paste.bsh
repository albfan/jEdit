/*
 * Vertical_Paste.bsh - a BeanShell macro script for the
 * jEdit text editor - Pastes the content of the clipboard
 * vertically
 * Copyright (c) 2001 Andre Kaplan
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

import java.util.StringTokenizer;
import javax.swing.text.BadLocationException;

import org.gjt.sp.jedit.*;
import org.gjt.sp.jedit.textarea.*;


void verticalPaste() {
    String verticalText = Registers.getRegister('$').toString();

    int currLine   = textArea.getCaretLine();
    int lineOffset = (
          textArea.getCaretPosition()
        - textArea.getLineStartOffset(currLine)
    );

    try {
        buffer.beginCompoundEdit();
        StringTokenizer st = new StringTokenizer(verticalText, "\n");

        while (st.hasMoreTokens()) {
            String s = st.nextToken();
            int start;
            if (currLine >= textArea.getLineCount()) {
                start = textArea.getLineEndOffset(textArea.getLineCount() - 1) - 1;
                buffer.insertString(start, "\n" + s, null);
            } else {
                start = Math.min(
                      textArea.getLineStartOffset(currLine) + lineOffset
                    , textArea.getLineEndOffset(currLine) - 1
                );
                buffer.insertString(start, s, null);
            }
            currLine++;
        }
    } catch (BadLocationException ble) {
    } finally {
        buffer.endCompoundEdit();
    }
}


verticalPaste();

