TO DO

Note that this is not a complete to do list. It mostly only lists bugs
and quirks that I need to fix eventually.

- goToBuffer(): need to focus edit pane in question
- after new display: optimize & match old performance
- switching between soft wrap and not needs to update anchors, etc
- scrolling bug happened without even using mouse!
- disable bracket match: gutter highlight not hidden
- display:
  - display manager: handle buffer not visible case
  - OffsetMgr.beginScreenLineOperations();
  - OffsetMgr.endScreenLineOperations(); // notifies anchors of changes.
  - end anchor:
    updates scroll bars.
    foldStructureChanged(), etc. doesn't need this.
  - first line anchor:
    updates scroll bars, doesn't repaint.
  - scrolling up and down:
    scroll bar handler stores old position; uses scroll methods in chunk
    cache
  - chunk cache first line: can be much better
  - text area: buffer scroll to, set first line, position hold
  - scroll up page, scroll down page
  - display manager: store first line
    edit pane no need to store first line between buffer switches
    still store horizontal scroll?
- help:
  - titles in search are fucked
  - title adds more to the relevance
  - FAQ: better titles
- quicknotepad needs requestDefaultFocus() -- NO -- JUST GET RID OF THE
  DEPRECATED API
- new plugin mgr:
  - human readable strings in source.... entry.status
  - ask before selecting dependencies & 'don't show again'
  - mirror change: refresh download locations
- canonPath: get rid of ..
- update horizontal scroll width immediately on buffer switch
- enter with browser view focused; hides dialog
- options for confirmation of:
  save all
  close all (w/ no unsaved changes)
- need distinct default styles for new token types
- HTML mode: use new token types
- synchro scroll & folding
- hypersearch: open in new split
- option to not follow symbolic links
- C+e C+c long block of text
  - soft wrap display provides fix: need nextLineRequested event
- buffer.mode=foo in action bar does not work
- new bsh and bsh command path
- C+ENTER 3 menu command - bar not hidden - need input handler action
  listeners or something
- C+ENTER 3 C+2
- tab in action bar
- beanshell: invokeAction() function
- perl: q{}, etc.
- position hold still doesn't work
- changes above a narrow cause display anamolies
- don't show 'new directory' in favorites:
- plugin error dialog -- if > 1 error per plugin
- A+# on OS X, need better modifier mapping on OS X
- how to handle S+0-9?
- C+e , and . insert , and . in the buffer, ditto for [ and ]
- bizarre dockable window manager button layout problem
- options dialog box can use a little cleanup:
  Appearance, Loading and Saving, General panes a bit confusing
- rect select and trailing whitespace
- return after collapsed fold: insert line after end of fold

- need a new jEditLauncher
- plugin tutorial:
  - plugin build environment docs
  - auto-created actions
  - link to jEdit devel page
  - quicknotepad class -- links to API docs
  - functions - links to API docs
  - quicknotepad docs
- plugin tips and techniques:
  - common. properties, using properties for UI strings
  - cutting down on startup time
  - canned dialog boxes in GUIUtilities
  - tools.jar
  - string comparison in MiscUtilities
  - writing a macro handler
  - writing a fold handler
  - OperatingSystem class
  - option groups
  - listening for buffer changes
  - canned controls:
    animated icon, color well button, enhanced dialog,
    font selector, history text field, 
    jcheckboxlist, rolloverbutton,
    variablegridlayout
  - displaying a help viewer
  - canned icons
  - vfs implementation
  - running stuff in i/o threads
  - multi-threaded i/o
  - jeditresource: protocol
  - getting line syntax info, textutilities.getTokenAtOffset()
  - text area extensions
  - text area caret & scroll listeners
  - status bar messages & readNextChar()
- links to API docs in macro guide
- vfs javadoc: invokeAndWait() example for createVFSSession()
- files with names of the form foo: are not handled very well in some
  cases since jEdit thinks they are URLs.
- <script> in javadoc
- user's guide:
  - vertical paste & rect select insertion
  - part III
    - non-beanshell languages
    - after canned dialog description: sidebar about full-blown GUIs -- mention
      upcoming dialog macro
    - describe alternative ways to obtain buffers, edit panes, text areas,
      in a sidebar about changing them
    - is Log described elsewhere? move to API guide and link from 15.5.2
      (using activity log as a tracing tool).
- wheel mouse -- option: jEdit mods -vs- system-wide mods
- auto indent:
  if(foo)
    while(bar)
    {
      //
    }
  <--- cursor here
- examples of EOL_SPAN_REGEXP matching in docs
- respond to shortcuts on KeyTyped only, track KeyPressed/KeyReleased to
  know mod status
- some JLists do not auto-scroll on keystroke
- format -- instead of \n\n, what if it has \n   \n?
- if A depends on B but A is loaded before B and B breaks, A ends up
  being loaded. Solution: load plugins in order of dependencies?
- scrolling horizontally when dragging into virtual space: a bit quirky
- eval-for-selected-lines doesn't work with rectangular selection
- focus problem with hypersearch in floating window
- plugin manager: install plugins, no restart, install another: deps bad
- plugin deps need JAR name, not plugin name
- maximisation state bug: open window, resize to size X. close window,
  open window again, resize to size Y. maximise. close window, open
  window again, it has size X not size Y.
- fs browser: scroll to visible after setting divider location
- expand fold: try to expand even if already expanded
- openFile(): can open two copies of the same buffer if a) remote b)
  canonPath != path
- recording 'evaluate for selected lines'
- aborts not always fired
- globalColors setting:
  - help viewer looks ugly
  - selected borders in list, tree, table wrong colors
- evalutate for selected lines: > 1 selection per line
- motif l&f: shortcuts in menu items

+ verify:

- line 2112 -- isNarrowed() check of moveCaretPosition()
- status bar still fooling around
- popups still positioned poorly
- searching in a buffer w/ narrowed fold
- sometimes trying to extend a selection creates one all the way to the
  end of the buffer
- narrow to one line: select all: blows up
- dwm: not always focused correctly
- JDK 1.4 focus bugs
- if loadMode() throws error, save of a mode file fails?

[error] AWT-EventQueue-0: Exception occurred during event dispatching:
[error] AWT-EventQueue-0: java.lang.ClassCastException: javax.swing.JButton
[error] AWT-EventQueue-0:       at
org.gjt.sp.jedit.gui.PanelWindowContainer.show(PanelWindowContainer.java:200)

  -- trying to show a non-existent dockable

+ cleanups:

- clean up VFSManager.errorOccurred() -vs- BufferIORequest.ERROR_OCCURRED
- BrowserView.reloadDirectory(): hardcoded design decisions
- finish persistent splits code
- custom stylesheet: no xmlns
- NO_WORD_BREAK and NO_LINE_BREAK: need to think about this, is it worth
  keeping INVALID? report errors in some other manner?
- clean up the way macro hierarchy is stored
- dialog parenting for fsb colors pane, vfs browser dialog
- requestDefaultFocus() is bad

+ features:

- close current area w/ dockables that don't implement
  requestDefaultFocus()
- add dockable window state change msg
- range-comment & rect select
- support rect start in virtual space too
- first focus: show all files that were modified on disk, in a list
- options for recent files list, recent files menu
- autosave recent file list?
- hypersearch refresh
- option to disable floating window dock bar

+ performance:

- bracket matching: no delay for current line match??
- final optimization for OffsetManager: scan to zero or scan to end
- getNext/PrevVisibleLine() is a linear scan
- do buffer load AWT half immediately after work thread half
- prioritize work requests so that active buffers get loaded first?
  too much of a hack?
- replace all in a directory could be faster
- buffer.setMode() slow
- inserting new lines -- why repaint entire text area?
- inserting/removing lines -- move gap less agressively
- positions should be gapped too
- eliminate redundant scans and events when loading buffer
- make vfs listing faster
- don't repaint whole selection when resizing
- backward virtual line scan
- do not call foldVisibilityManager.getLastVisibleLine() on every change
  w/ soft wrap. kills performance if also narrowed.
- if caret is at the end of a buffer when doing a replace all, a lot of
  repaint() and getLineOfOffset() calls are made, however this doesn't
  seem to affect performance that much.
- could make non-soft wrap chunk merge even faster!
- could make long lines even faster
- syntax SPAN::END substitution: String --> char[] --> String
- delete line magic caret w/ block caret
- replace with lookahead/lookbehind doesn't work

jEdit buffer local properties:
:wrap=hard:maxLineLen=72:indentSize=2:
