TO DO

short term plan:

before soft wrap, must fix all the document bugs:

- narrow: insert line after first fucked
- when loading a file with collapsedFolds property, last line always
  visible
- nextLineRequested still fucked

- print should not use so much memory
- background color for tokens

- DoS in edit server
- idea for fixing buffer property issues: BufferProp class
- getCenterPoint()
- support multi-screen systems properly
- fs browser: scroll to visible after setting divider location
- aiob in getVirtualLineCount()?
- if loadMode() throws error, save of a mode file fails?
- jdk1.3: open dialog divider
- expand fold: try to expand even if already expanded
- C+e , and . insert , and . in the buffer
- docking buttons not always hidden
- definately repaint problems
- keyboard navigation of current directory, recent dirs, etc broken
- keystrokes stop working all of a sudden
- JDK 1.3 focus bugs
- allegedly redo doesn't redo everything?
- dwm: not always focused correctly
- still collapseFolds behavior problems
- stylesheet: keycap inside keycombo
- openFile(): can open two copies of the same buffer if a) remote b)
  canonPath != path
- maybe fix GUIUtilities.java to store maximisation state
- idea to make things go faster: token marker splits on ' ', '\t'
  then lineToChunkList() has much less work to do, and could even be
  eliminated completely.
- ensure that the commenting out of _isLineVisible() in expand fold
  won't stuff anything up.
- text area painter:
  - use line metrics
  - use float co-ordinates
  - cache chunk lists
- soft wrap
- finish 'troubleshooting' menu:
  - about cmd
  - keytest cmd
  - make bug report cmd
  - docs in user's guide
- faster hypersearch
- put package.html everywhere
- OK_CANCEL_OPTION in confirm() docs
- C+d with selection: delete all selected lines
- isToolsJarAvailable(): prompt for location in a file dialog box. Need
  some way of showing arbitriary message in VFS file chooser.
- last focused dockable cmd
- XModeHandler: better error reporting
- documentation to do
  - 'evaluate for selected lines'
  - smart case insens replace
  - context sensitive cmds tip
- rule set property docs in part II
- add index terms throughout user's guide!
- changing heap memory docs
- plugin manager needs overhauled error reporting
- make text area's buffer event handler faster
- API guide: compareStrings(), showPopupMenu()
- MiscUtilities path name methods need to be documented
- plugin guide: mention fully qualified class names
- getFoldLevel(): should not call linesChanged() all the time
- v2p/p2v: implement from end backward scan
- loading and saving opt pane: 'choose' button for backup directory
- style setting for folding line indicator
- inefficencies: lots of File objects created for the sake of
  isAbsolute().
- plugin manager: show all dependencies, not just first-order ones
- removing a plugin should offer to remove the ones that depend on it too
- help viewer: two tabs, contents and index. index browser
- improved window docking:
  - DockableLayout: handle too large
  - CCW rotated text not drawn correctly
- file system browser:
  - commands->copy file list
  - much better autocomplete
  - pre-load open and search dialogs in background thread, and cache
    them
  - better permissions API
  - show wait cursor while directory is loading
  - directory chooser dialog box
  - keyboard select file should activate open files -- or Enter press
- <file>?line= or ?marker=
- fold navigator to browse fold tree in explicit fold mode
- reintroduce -bshclient command line switch
- plugin size reporting, new install plugins dialog UI layout
- saving a read-only file: show a confirmation dialog box
- tool bar option pane: editing existing entries
- recording 'evaluate for selected lines'
- rollover toolbar buttons option
- search and replace: scroll text area so selection is visible despite
  dialog position
- better auto indent
- appendix in plugin guide on contributing plugins
- HTML mode:
  - inside tags, delegate on*="..." to JavaScript mode,
    style="..." to CSS mode
  - better <script>/<style> handling using nested delegates
- save markers when a buffer is closed, adding/removing markers shouldn't
  set the dirty flag
- replace in selection with rectangular selections
- keymaps replace .shortcut properties
  - loaded from $HOME/.jedit/keymaps, and jedit.jar
  - one keymap can 'extend' another
  - keymaps are XML files with <bind>, <unbind> tags
  - jEdit, emacs, keymaps included, maybe others
  - instead of hard-coded modifier swapping on MacOS, have a MacOS keymap
- use java2d to draw block caret (instead of XOR)
- resizing doesn't update horizontal scroll bar
- find next with $ or ^
- custom stylesheet: no xmlns
- eval-for-selected-lines doesn't work with rectangular selection
- how to handle S+0-9?
- if start is at the end of a line, .* always matches an empty string
- formatting problems in user's guide in table cells
- finish persistent splits code
- installing source for already installed plugins is not possible
- a line consisting entirely of spaces & word wrap
- switching option panes real fast
- tabbing to text area fails
- zlib decompression errors in plugin manager
- failed saves should not clear the dirty flag
- get rid of final blank page of user's guide
- aborts not always fired
- globalColors setting:
  - tree controls, file system browser icons, tool bar icons look a bit
    ugly with different backgrounds
  - help viewer looks ugly
  - selected borders in list, tree, table wrong colors
  - updateUI doesn't update tree colors
  - restart should not be necessary for 'globalColors' to take effect
- 'Stop' in plugin manager needs to be handled more gracefully
- evalutate for selected lines: > 1 selection per line
- undo: redo doesn't clear dirty flag if necessary
- BrowserView.reloadDirectory(): hardcoded design decisions
- lower case all user's guide ids
