TO DO

Note that this is not a complete to do list. It mostly only lists bugs
and quirks that I need to fix eventually.

- macos international keys
- plugin mgr UI - kill modal dialog
- win xp my documents
- fsb date
- plugin options btn
- preserve 2 spaces after . w/ format
- preserve caret pos w/ format
- toggle caret scroll to when not in vis region?
- complete word: non-word inserts first
- print selection
- show context w/ S+F10
- drop in same place: cancel
- adding to icons prop
- control auto reload

- test inserts with fold vis map
- new file close messes up perspective
- document lack of C+e C+e
- control drag doesn't kill existing selection
- drag and drop: start drag and cancel, caret can be left in a strange
  place
- drag and drop: do a compound edit if same buffer
- fix double slash in path bug
- thread safety problem in VFSManager.waitForRequests()
- print qq{ $key="$attributes->{$key}"}; in perl
- if a plugin's stop() throws an exception, infinite loop?
- option for b&w print
- document deep indent
- tall caret and tab
- tall caret and backspace
- new file: horiz scroll wrong
- while loading --> scroll bar
- fsb default size
- split view line insert: repainted twice, selection problems
- vfs browser: open in new view: doesn't focus the new view
- C+ENTER 3 C+2
- class loading problems
- optional dependencies
- broken activity log autoscroll
- bizarre dockable window manager button layout problem
- wheel mouse -- option: jEdit mods -vs- system-wide mods
- F2 doesn't work in JTree/JTable, maybe others
- path shown twice in tree: maybeReloadDirectory()
- format -- instead of \n\n, what if it has \n   \n?
- openFile(): can open two copies of the same buffer if a) remote b)
  canonPath != path
- shortcuts: stale shortcuts remain?
- bad wrap:
  						MiscUtilities.quicksort(favorites,
  							new VFS.DirectoryEntryCompare());
- history text field tweak
- search dialog: auto-focus fields show last values

- aborts not always fired
- globalColors setting:
  - help viewer looks ugly
  - selected borders in list, tree, table wrong colors
- motif l&f: shortcuts in menu items
- replace with lookahead/lookbehind doesn't work

- auto indent: don't de-indent on enter if no leading indent at all?
- note about dependencies
- help:
  - titles in search are fucked
- new macro handler api
- sidebars: need a border or some sort
- user's guide:
  - part III
    - describe alternative ways to obtain buffers, edit panes, text areas,
      in a sidebar about changing them
- examples of EOL_SPAN_REGEXP matching in docs
- plugin tutorial:
  - plugin build environment docs
  - auto-created actions
  - link to jEdit devel page
  - quicknotepad class -- links to API docs
  - functions - links to API docs
  - quicknotepad docs
- plugin tips and techniques:
  - common. properties, using properties for UI strings
  - cutting down on startup time
  - canned dialog boxes in GUIUtilities
  - tools.jar
  - string comparison in MiscUtilities
  - writing a macro handler
  - writing a fold handler
  - OperatingSystem class
  - option groups
  - listening for buffer changes
  - canned controls:
    animated icon, color well button, enhanced dialog,
    font selector, history text field, 
    jcheckboxlist, rolloverbutton,
    variablegridlayout
  - displaying a help viewer
  - canned icons
  - vfs implementation
  - running stuff in i/o threads
  - multi-threaded i/o
  - jeditresource: protocol
  - getting line syntax info, textutilities.getTokenAtOffset()
  - text area extensions
  - text area caret & scroll listeners
  - status bar messages & readNextChar()
- vfs javadoc: invokeAndWait() example for createVFSSession()

- how to handle S+0-9?
- C+e , and . insert , and . in the buffer, ditto for [ and ]
- return after collapsed fold: insert line after end of fold
- some JLists do not auto-scroll on keystroke
- maximisation state bug: open window, resize to size X. close window,
  open window again, resize to size Y. maximise. close window, open
  window again, it has size X not size Y.
- C+b -- click -- keys don't work

+ cleanups:

- delete line magic caret w/ block caret
- is this bogus?
				else if(fvm[endi] == startLine + numLines)
				{
					fvmput(starti,endi + 1,null);
				}
- quicknotepad: needs some code cleanup
- text area mouse handler cleanup
- clean up VFSManager.errorOccurred() -vs- BufferIORequest.ERROR_OCCURRED
- BrowserView.reloadDirectory(): hardcoded design decisions
- custom stylesheet: no xmlns
- NO_WORD_BREAK and NO_LINE_BREAK: need to think about this, is it worth
  keeping INVALID? report errors in some other manner?
- clean up the way macro hierarchy is stored
- dialog parenting for fsb colors pane, vfs browser dialog

+ features:

- do all modifier handling through the modifier mapping
- perm to string for FTP plugin
- if A depends on B but A is loaded before B and B breaks, A ends up
  being loaded. Solution: load plugins in order of dependencies?
- rect select and trailing whitespace
- expand fold: try to expand even if already expanded
- bsh = { 2 + 2; }
- eval-for-selected-lines doesn't work with rectangular selection
- customizable vfs browser extended attributes
- new plugin mgr: ask before selecting dependencies & 'don't show again'
- need to get rid of endsWith("/") || endsWith(File.separator) bullshit
- don't rely on browser view for completion
- adapt vfs filename field for the path display at the top
- vfs dialogs: only one field?
- vfs.isValidPath()
- make gutter fully painted by extensions just like text area
- shortcut editor: restore default button
- can do perl q|...| etc. using begin/end substitution!
- perl: q{}, etc.
- do help search in a thread
- caret saving needs to be more flexible w.r.t. split panes
- <edit pane,buffer> --> <caret info> map
- vfs browser right click menu: plugins & favorites
- don't show 'new directory' in favorites:
- add option for confirm.save-all
- consistent formatting for mode files
- gutter options: add option to completely hide gutter
- expand: scroll to end of fold if possible
- need a new jEditLauncher
- <script> in javadoc
- auto indent:
  if(foo)
    while(bar)
    {
      //
    }
  <--- cursor here
- remember floating & cloned dockables in perspective
- add dockable window state change msg
- range-comment & rect select
- autosave recent file list?
- hypersearch refresh
- option to disable floating window dock bar
- MARK_PREVIOUS delegate like SEQ; update mail.xml
- INLINE token type
- AT_WORD_END match
- abbrevs need an overhaul
- hypersearch: "open in..." right click menu
- hypersearch: remember search settings & "refresh" command
- eval, eval-selection, etc: do array to string override
- beanshell: unloading commands when a plugin is unloaded

+ performance:

- closing lots of files is slow -- esp. with close all dialog box!
- menu drag: slow
- bracket matching: no delay for current line match??
- final optimization for OffsetManager: scan to zero or scan to end
- do buffer load AWT half immediately after work thread half
- prioritize work requests so that active buffers get loaded first?
  too much of a hack?
- replace all in a directory could be faster
- buffer.setMode() slow
- eliminate redundant scans and events when loading buffer
- make vfs listing faster
- don't repaint whole selection when resizing
- could make non-soft wrap chunk merge even faster!
- syntax SPAN::END substitution: String --> char[] --> String
- is getScreenLineOfOffset() called often?
- if caret is at the end of a buffer when doing a replace all, a lot of
  repaint() and getLineOfOffset() calls are made
- optimize for no folding & no soft wrap case:
  - reset() and changed() don't need to scan
  - scroll/physUp/Down() simpler
- inserting lines repaints whole text area
- see if getLineOfOffset() can be optimized

jEdit buffer local properties:
:wrap=hard:maxLineLen=72:indentSize=2:
