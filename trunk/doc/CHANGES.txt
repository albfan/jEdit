JEDIT 4.2 VERSION HISTORY

{{{ Version 4.2pre1

Thanks to Kris Kopicki and Ryan Grove for contributing to this release.

{{{ Editing

- Quick copy now more consistent with usual mouse behavior:

  - Control-middle-clicking on a bracket will insert the contents of the
    bracketed block at the caret position.

  - Shift-middle-clicking at a point will insert text from the caret to
    the point at the caret position. Can be used to duplicate a line,
    for example.

- Register contents are now saved across editing sessions in
  ~/.jedit/registers.xml.

- Complete Word popup now has keyboard shortcuts (1 - 0) for inserting
  the first 10 elements in the list.

}}}
{{{ Input

- Entering a prefix while a JTextComponent has focus will move focus to
  the text area. This allows shortcuts like C+e n n to be used from the
  search bar and such without having to prefix them with C+e C+e first.

}}}
{{{ Syntax Highlighting

- Improved C pre-processor syntax highlighting.

- Updated NSIS2 syntax highlighting (Ryan Grove).

- AT_LINE_START, AT_WORD_START and AT_WHITESPACE_END attributes can now
  be set independently for BEGIN and END tags of a SPAN.

- The default background color of a token is now the background color of
  the current ruleset's default token type. It now only defaults to the
  text area background if the ruleset's default token type does not have
  a background color. This matters because for example if COMMENT2 has a
  background but MARKUP does not, HTML markup in Javadocs now has the
  same background as the rest of the comment.

}}}
{{{ User Interface

- If regular expressions are enabled, Search->Find Previous now shows a
  dialog box message instead of silently searching forwards.

- Added an option to Appearance option pane to control menu spillover
  (default is 20 items).

- The title bar now indicates if the current buffer has been modified
  since the last save.

- Moved plugin option panes to a new Plugins->Plugin Options dialog box.

- Improved window docking.

  - Floating windows now have a bar across the top with a menu for
    docking the window.

  - Right-clicking on a docked window button shows a menu for undocking
    the window, opening a cloned instance, and moving it to another
    docking area.

  - Docking pane of Global Options dialog box removed because it is no
    longer necessary.

- Utilities->Action Bar (shortcut C+ENTER) shows the action bar, for
  quickly invoking editor commands and changing settings from the
  keyboard.

  - Enter an action name (or a substring) to invoke that action.

  - Enter a repeat count then invoke an action using any means to repeat
    that action.

  - Enter "buffer.<prop>=<value>" to set the buffer-local property
    <prop> to <value>; for example, "buffer.tabSize=4" changes the
    curent buffer's tab size to 4.

  - Enter "!buffer.<prop>=<value>" to set a buffer property on a global
    basis; for example, "!buffer.tabSize=4" changes the default tab size
    for all buffers to 4.

  - Enter "<prop>=<value>" to set any other global property; for
    example, "view.showToolbar=false" hides the tool bar.

  - Note that property names are undocumented. You can get a list using
    the Misc->Properties->jEdit Properties macro.

}}}
{{{ Scripting

- BeanShell scripts now preset the 'wm' variable to
  view.getDockableWindowManager(). Useful for actions.xml.

}}}
{{{ Optimizations

- Faster buffer loading.

- Faster activity log.

- Bracket matching is now only performed 200ms after the last caret
  movement. This should solve the problem of annoyingly slow response
  when eg, inserting a number of characters before an unclosed bracket
  near the beginning of a large source file.

- Bracket matching now only scans up to 10,000 lines.

- Consecutive "chunks" with the same style attributes were previously
  merged when a line was being painted, for improved performance. Now we
  take this one step further and merge them when putting a line's chunk
  list in the cache. This should improve scrolling performance,
  especially when smooth text is on.

- jEdit now performs much better when very long lines are present in a
  buffer.

- A funky little display optimization with monospaced fonts is now
  performed. In jEdit 4.1 this could be enabled with a hidden property,
  but now we detect if a monospaced font is actually in use.

- Faster line insertion and removal when there are collapsed folds below
  the insertion point.

- Faster painting of tokens with background colors. Previously if tokens
  defined a background color, there was a noticable lag when scrolling
  for example (at least with Java 1.4.1 on Linux). This no longer
  happends.

}}}
{{{ Platform-Specific Changes:

- MacOS plugin version 3.0 now requires Java 1.4.1. All native calls now
  use the Cocoa API, and a dock menu has been added. The dock menu
  provides similar functionality to the plugin menu (Kris Kopicki).

}}}
{{{ Bug Fixes

- jEdit no longer minimizes and then restores windows when files are
  opened through the edit server on windows. This was done to work
  around an apparent bug in the Windows JRE. If you still experience the
  problem, execute this BeanShell code:

  jEdit.setBooleanProperty("server.brokenToFront",true);

- Some HTTP proxies decompress GZip streams for whatever reason. The
  plugin manager now checks if the stream starts with the GZip magic
  characters; if not, it parses it without decompression, instead of
  throwing an exception.

- Multiple monitors should work properly now (Kris Kopicki).

- Selecting "Search in Directory" from the right-click menu of a
  directory in the parent directories list would search in the wrong
  directory.

- Fixed problems with bracket matching not being activated when
  switching between split panes.

- Not all keyboard shortcuts worked in the Complete Word popup.

- Closing a view did not close any cloned dockable windows.

}}}

}}}

jEdit buffer local properties:
:wrap=hard:folding=explicit:maxLineLen=72:indentSize=2:
