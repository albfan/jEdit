JEDIT 4.1 VERSION HISTORY

* Version 4.1pre1

Thanks to Alexander Maryanovsky, Alfonso Garcia, Claude Eisenhut,
Joseph Schroer, Kris Kopicki, Steve Snider and Thomas Dilts for
contributing to this release.

+ Miscellaneous Changes:

- Fixed auto-indent behavior when entering constructs like:
  if(foo)
    bar();
  baz();
  in Java/C/C++/etc modes. Previously the 'baz();' would get an
  unnecessary level of indent, requiring it to be removed manually.
  (Alexander Maryanovsky)

- WheelMouse plugin integrated into core -- no need to install a
  separate plugin to get wheel mouse scrolling under Java 2 version 1.4.

- Added SOCKS proxy support. This option will help people trapped behind
  a Microsoft Proxy Server configured to use NTLM authentication.
  Normal HTTP connections through the proxy would not be possible since
  Java does not implement this proprietary protocol; however a little
  known fact is that MS Proxy Server also usually runs a SOCKS service
  that does not require a password. (Alfonso Garcia)

- Added an option to the 'Text Area' pane to implement "standard"
  previous/next word behavior, like that in a lot of other programs
  (next word moves caret to start of next word, instead of end of
  current word; previous word moves caret to end of previous word,
  instead of start of current word).

  You might remember I implemented this behavior for a little while in
  the 4.0 pre-releases, but now it's back as a configurable option.
  (Alexander Maryanovsky)

- Added a few extra key bindings for Windows users:
  S+DELETE bound to cut
  C+INSERT bound to copy
  S+INSERT bound to paste

- BeanShell 1.2b6 included. Changes since 1.2b5 are:

  - Made bsh.Parser public and added a main() method allowing users to
    call the parser on files for simple validity checking.
  - Made a small addition to grammar to provide an option to retain
    formal (javadoc style) comments in the parse tree.
  - Fixed accessibility bug in finding fields.
  - Fixed scoping on catch blocks such that untyped variables in the
    catch parameter do not leak out of the block. They now act as they
    would with a declared type in Java (local).
  - Fixed some thread safety bugs with try/catch blocks.
  - Fixed Interpreter serialization issue - reset streams.
  - Fixed bug in accessibility affecting access to package hidden
    superclasses.
  - Exposed bsh.BshMethod and added a public invoke() method.
  - Added getMethods() method to namespace to enumerate methods.

  The fact that BshMethod is now public has facilitated optimizations
  which improve performance of BeanShell search and replace.

+ Printing Changes:

- Updated printing code (Thomas Dilts)
  - Uses Java 2 version 1.4 print dialogs when running on that Java
    version
  - Performs printing in a background thread
  - On some Java versions, word spacing in the output would be wrong.
    I added an option to enable a workaround, however this workaround
    increases the spool file size; it makes jEdit send the actual
    character shapes to the printer/spool file, instead of commands to
    draw strings.

+ Syntax Highlighting Changes:

- More intelligent highlighting of numbers. Instead of hard-coded
  heuteristic that only worked for C-like languages, numbers are now
  highlighted as follows:
  - A keyword consisting of only digits is automatically marked with the
    DIGIT token type.
  - If it has a mix of digits and letters, it is marked as DIGIT of it
    matches the regexp specified in the rule set's DIGIT_RE attribute.
    If this attribute is not set, then mixed sequences of digits and
    letters are not highlighted.
  - In Java mode, for example, the default value of this regexp is
    "(0x[[:xdigit:]]+|[[:digit:]]+)[lLdDfF]?".

- EOL_SPAN elements can now have DELEGATE attributes.

- SEQ elements can now have DELEGATE attributes. If specified, this rule
  set will be swapped in after the text matched by the sequence rule.

- Delegates to rulesets with TERMINATE rules should work now.

- IGNORE_CASE attribute of KEYWORDS rule removed. This value is now the
  same as the IGNORE_CASE attribute of the parent RULES tag.

- WHITESPACE rule no longer necessary in mode definitions.

- It is no longer necessary to define <SEQ TYPE="NULL"> rules for
  keyword separator characters. Now, any non-alphanumeric character,
  that does not appear in a keyword string or the "noWordSep"
  buffer-local property is automatically treated like it had a sequence
  rule.

- Added FORTRAN syntax highlighting (Joseph Schroer)
  Added Interilis syntax highlighting (Claude Eisenhut)
  Updated PL-SQL mode (Steve Snider)
  Updated NetRexx mode (Patric Bechtel)

- HTML and related edit modes now correctly highlight sequences like:

  <SCRIPT LANGUAGE="JavaScript">...</SCRIPT>
  <SCRIPT ... whatever ...>...</SCRIPT>

  Previously only JavaScript between <SCRIPT> and </SCRIPT> was
  highlighted.

  A similar change has been made for <STYLE> tags.

- Improved loading time of plain text files if 'more accurate syntax
  highlighting' is on.

+ Search and Replace Changes:

- HyperSearch now respects rectangular selections. 'Replace All' already
  supported rectangular selections.

- Directory search is now VFS-aware; however it shows a confirm dialog
  before doing a search on a remote filesystem. If your VFS is not
  affected by network latency, you can have the getCapabilities() method
  return the new LOW_LATENCY_CAP capability.

- Search bar no longer takes up the full width of the view. This saves
  some screen space.

- Clicking 'Cancel' or closing the search and replace dialog box no
  longer shows warnings about empty filesets, etc.

+ User Interface Changes:

- Status bar looks somewhat different now, and shows the word wrap mode
  and line separator status.

- The text color and style used to show the "[n lines]" string can now
  be set independently of the EOL marker color.

- Plugin manager window can be closed by pressing Escape.

- Open buffers are shown with a different icon in the file system
  browser.

- 'I/O Progress Monitor' window is dockable now.

- Added two new sub-menus to the Utilities menu, 'jEdit Home Directory'
  and 'Settings Directory'. These two work in a similar fashion to the
  'Current Directory' menu.

  Also the 'Current Directory' menu (and these two new menus) now also
  lists directories; selecting a directory menu item opens it in the
  file system browser.

- Moved BeanShell evaluation commands from 'Utilities' to 'Macros' menu.

- New splash screen and about box. (Kris Kopicki)

+ OS-specific Changes:

- MacOS plugin version 1.2 adds an option pane with a few settings, and
  some bug fixes and cleanups. (Kris Kopicki)

- On Unix, the installer now defaults to installing in the user's home
  directory when running as a non-root user.

+ Bug Fixes:

- A single invalid file system browser coloring regular expression no
  longer stops the remaining expressions from being loaded.

- Select Open File; press Enter first; then choose a file to open. Bang,
  an error message. Now fixed.

- Fixed a bug in the undo request merging code that would occur
  sometimes when multiple consecutive pieces of text were removed one
  after the other.

- Fixed a bug in the undo request merging code that would occur when
  a selection was replaced with some text.

- If the splash screen was disabled, running jEdit with the -nogui and
  -nobackground command line arguments didn't work, because the AWT
  event thread was never started, because no GUI calls were made, and as
  a result jEdit exited immediately after starting up instead of
  entering the event loop.

- Fixed erronous assignment in VFS browser code that would cause
  NullPointerExceptions after opening a file in a new view.

- Triple-clicking on the last line of a file printed an
  ArrayIndexOutOfBoundsException.

- When closing a file with unsaved changes, the file will now stay open
  if the save failed. Previously it would be closed and the unsaved
  changes would be lost forever.

- If 'Keep Dialog' was off, the search dialog would close, even after an
  unsuccessful HyperSearch. This was inconsistent with the bahavior for
  normal searches, where an unsuccessful match did not close the dialog
  (so you could correct the search string easier).

- One of the tips of the day referred to an invalid URL.

- Previously, the filesystem browser opens the clicked directory if
  clickCount == 2. This doesn't work if you double click once and then
  immediate double click again on a directory (or a file) at the same
  physical location, because the 2nd double click is reported with a
  click count of 3 and 4. (Alexander Maryanovsky)

- The 'initially collapse folds with level' setting is how honored when
  reloading files.

- A few printing bugs fixed. (Thomas Dilts)

- The help viewer should no longer open behind the view when jEdit is
  run for the first time on some Java implementations.

- StatusBar.MemoryIndicator.removeNotify() was missing a
  super.removeNotify() call. This could cause 'InputContext' errors when
  exiting jEdit. (Alexander Maryanovsky)

- Workaround for views not being brought to front on windows. This
  workaround minimises and then restores the view, so a minimise
  animation might be visible for a brief period of time. However,
  there is no other way of fixing this. (Alexander Maryanovsky)

- The plugin manager did not delete downloaded files from the
  'PluginManager.download' directory on some operating systems, due to a
  missing close() call.

- JEditTextArea.goToEndOfLine() (bound to END if 'smart home/end' is
  off, or END END if its on) followed by goToNextLine() would move the
  cursor to the first column.

- Preview_Javadoc_of_Buffer.bsh macro used the deprecated
  DockableWindowManager.getDockableWindow() method.

- Added ColorWellButton control. Under OS X, changing the background
  color of a JButton doesn't work if the MacOS Adaptive look and feel is
  in use... so I wrote a custom control. It looks better and eliminates
  duplicated code anyway. Plugin developers, please use this instead of
  the widely-copied and pasted JButton trick.

+ API Changes:

- Two methods added to jEdit class:
  getDoubleProperty()
  setDoubleProperty()

- Removed unused TextUtilities.findMatchingBracket(Buffer buffer,
  int line, int offset, int startLine, int endLine) method.

- New ViewUpdate.EDIT_PANE_CHANGED message added; it is sent when a
  different edit pane in a split view receives focus.

- EBMessage.veto(), isVetoable() methods and EBMessage.NonVetoable class
  deprecated.

- Removed old text area highlighter API.

- Removed BufferUpdate.ENCODING_CHANGED, FOLD_HANDLER_CHANGED messages;
  replaced with generic BufferUpdate.PROPERTIES_CHANGED.

- MultiSelectStatusChanged message removed.

- Buffer.markTokens(int lineIndex) deprecated; use
  Buffer.markTokens(int lineIndex, TokenHandler tokenHandler) instead,
  with one of the available TokenHandler implementations from
  org.gjt.sp.jedit.syntax.

- Added new jEdit.getActiveView() method.

- VFS file chooser now supports a new 'CHOOSE_DIRECTORY_DIALOG' mode.

- Buffer.getRuleSetAtOffset() method is now public.

jEdit buffer local properties:
:wrap=hard:maxLineLen=72:indentSize=2:
