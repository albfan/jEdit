<!-- jEdit buffer-local properties:                     -->
<!-- :indentSize=1:noTabs=true:maxLineLen=72:tabSize=2: -->

<!-- jEdit FAQ									        -->
<!-- Copyright (C) 2002 John Gellene                    -->

<!-- $Id$
-->



<sect1 id="other-customizing"><title>Other Ways to Customize jEdit</title>
<para>
  This section deals with other ways in which you can customize jEdit's appearance and
  behavior.
</para>

<qandaset defaultlabel="qanda">

<qandadiv id="customize-other"><title>Other Settings and Options</title>

<qandaentry>
	<question id="settings-change-font">
		<para>
			How can I change the font used for menu labels and other elements of jEdit's
			user interface?
		</para>
	</question>
	<answer>
		<para>
			Open the file [jedit install directory]/startup/changeUIFonts.bsh; near the end
			is the line:
<programlisting>
// changeUIFonts("SansSerif", Font.PLAIN, 12);
</programlisting>
			<quote>Uncomment</quote> this line by removing the <quote>//</quote> from the beginning, and
			change the font specification as desired. The new font will be used next time
			you start jEdit.
		</para>
	</answer>
</qandaentry>

<qandaentry>
	<question id="settings-add-classpath">
		<para>
			I want to add a directory to the classpath. I did this in the standalone
			BeanShell with ease by using the <classname>addClassPath(String)</classname>
      method. but this doesn't work in a macro. How could I manage the
      classpath in jEdit?
		</para>
	</question>
	<answer>
		<para>
			The implementation of BeanShell used in jEdit does not use BeanShell's
			class loader. The script method contained in loadJarClasses.bsh (found in
			the Downloads section of <ulink url="http://community.jedit.org">jEdit
			Community</ulink>) should work if you know the path to a specific class
			file or class archive.
		</para>
	</answer>
</qandaentry>



</qandadiv>


</qandaset>


</sect1>

<sect1 id="macros"><title>Working with Macros</title>
<para>
  This section deals with questions on writing and running macros.
</para>

<qandaset>

<qandadiv id="macro-using"><title>Using macros</title>

<qandaentry>
	<question id="macro-exec">
		<para>
			In a macro I'd like to exec an external program (e.g. jmk, javac) and capture
			its output to a buffer. I'd also like to see this output as the
			external program runs or be able to interact with the program. So when I exec,
			what happens to System.in/out/err of the exec'd program?
		</para>
	</question>
	<answer>
		<para>
			Use the <filename>runInSystemShell()</filename> or the
			<filename>runCommandToBuffer()</filename> script methods that come
			bundled with the Console plugin. The help documentation for Console provides
			details on these methods. Currently the Console's System shell is not
			interactive during execution of a command, but it does receive and display the
			standard output and error streams of the external process.
		</para>
	</answer>
</qandaentry>

</qandadiv>

</qandaset>

</sect1>

<sect1 id="plugins"><title>Working with Plugins</title>
<para>
  This section deals with questions concerning the use of jEdit's
  plugins.  Plugins are applications that share jEdit's memory space
  and user interface and provide a wide variety of functions and
  services.
</para>

<qandaset defaultlabel="qanda">

<qandadiv id="plugin-general"><title>General plugin questions</title>

<qandaentry>
  <question id="plugins-latest-official">
    <para>
      Where can I get information on the latest available
      <quote>official</quote> plugins?
    </para>
  </question>
  <answer>
    <para>
      To get a listing of the latest plugins available for downloading from
      jEdit Plugin Central, use the <guimenuitem>Plugin Manager</guimenuitem>guimenuitem>
      feature on jEdit's <guimenu>Plugin</guimenu> menu. You can also get more
      detailed descriptions of the plugins from the <ulink
      ulink="http://plugins.jedit.org">Plugin Central</ulink> web site.
    </para>
  </answer>
</qandaentry>

<qandaentry>
  <question id="plugins-latest-beta">
    <para>
      Where can I get information on new plugins under development?
    </para>
  </question>
  <answer>
    <para>
      Many plugin developers make beta versions of their plugins available for
      downloading on the <ulink url="http://community.jedit.org">jEdit
      Community</ulink> web site.  Check the <quote>Plugin beta
      versions</quote> section of the web site's <quote>Downloads</quote>
      area.
    </para>
  </answer>
</qandaentry>


<qandaentry>
	<question id="plugin-install-manual">
		<para>
			How do I install a plugin manually, without using the Plugin Manager?
		</para>
	</question>
	<answer>
		<para>
			Copy the plugin's jar archive file (or files, if there are more than one)
			to the <filename>/jars</filename> subdirectory of either (a) the directory in
			which jEdit is installed, or (b) your user settings directory (which you can find
			by evaluating the BeanShell expression
			<userinput>jEdit.getSettingsDirectory()</userinput>.
		</para>
	</answer>
</qandaentry>

<qandaentry>
  <question id="plugins-developing">
    <para>
      How do I write a plugin?
    </para>
  </question>
  <answer>
    <para>
      Writing a plugin requires a working knowledge of Java and some
      familiarity with jEdit's Plugin API.  There is a tutorial on
      plugin development in the jEdit User's Guide.  The source
      code distribution for jEdit also includes the source for
      an example plugin, <application>Quick Notepad</application>, which
      is discussed in the tutorial.
    </para>
    <para>
      To learn more about plugin development, take a look at the source
      code for other plugins, particularly those whose features or user
      interface you might use as a model.  The <ulink
      url="mailto:devel@jedit.org">jedit-devel mailing list</ulink> and
      the message boards at <ulink url="http://community.jedit.org">jEdit
      Community</ulink> are also available for specific questions.
    </para>
  </answer>
</qandaentry>

<qandaentry>
	<question id="plugin-irc">
		<para>
			Is there an IRC (Internet Relay Chat) plugin for jEdit?
		</para>
	</question>
	<answer>
		<para>
			Yes. Open the Plugin Manager, then select <guimenuitem>Install
			plugins</guimenuitem>. You will find the
			IRC plugin which you can select for installation.
		</para>
	</answer>
</qandaentry>

<qandaentry>
	<question id="plugin-console-execute">
		<para>
			Is it possible to execute your application from within jedit?
		</para>
	</question>
	<answer>
		<para>
			Yes. You can use the System shell of the Console plugin to run you application.
			The only limitation is that the plugin does not provide access to the
			application's standard input stream, so you will not be able to provide
			command-line input once the application is running. If the application requires
			such input, it will hang and you will have to terminate its process. Details are
			available in the help documentation for the Console plugin.
		</para>
	</answer>
</qandaentry>


<qandaentry>
	<question id="plugins-codeaid-install">
		<para>
			How do you install a CodeAid database?
		</para>
	</question>
	<answer>
		<para>
			Copy the database to the <filename>/codeaid</filename> subdirectory
			of your user settings directory.
			To obtain the path to the settings directory, evaluate
			<userinput>jEdit.getSettingsDirectory()</userinput> as a
			BeanShell expression.
		</para>
	</answer>
</qandaentry>

<qandaentry>
	<question id="plugin-cvs">
		<para>
			Can I work with CVS under jEdit? Is there a plugin for CVS? How can I send a
			command from jEdit so as to use CVS from within jEdit?
		</para>
	</question>
	<answer>
		<para>
			A plugin for using CVS with jEdit is currently under development. Under Windows
			and the WinCVS Open Source package, you can specify <userinput>jedit.exe</userinput>
			as your default viewer and editor to automate the opening of file.
		</para>
	</answer>
</qandaentry>

<qandaentry>
	<question id="plugin-debugger">
		<para>
			Is there a debugger plugin?
		</para>
	</question>
	<answer>
		<para>
			A plugin based on the version 1.4 of the JSwat debugger application is currently
			available for download using jEdit's Plugin Manager feature.
		</para>
	</answer>
</qandaentry>

<qandaentry>
	<question id="plugin-antfarm-cmdlineprop">
		<para>
			Using AntFarm, how do I pass a command-line property to my build
			(for example, <userinput>ant build -Dtarget=test</userinput>)?
		</para>
	</question>
	<answer>
		<para>
			In general, you would need to run Ant from a command line to pass specific
			parameters. The AntFarm plugin currently does allow you specify the target
			to be built from its graphical display, so the example given in the question
			could be run using the plugin.
		</para>
	</answer>
</qandaentry>

<qandaentry>
	<question id="plugins-xslt">
		<para>
			Any development on integrating an XSL parser? It would be great to have the
			possibility to do XSL + XSLT -> XHTML development in the same environment as
			other development.
		</para>
	</question>
	<answer>
		<para>
			There has been no annouced effort to develop a plugin for XSL or XSLT. Using
			command lines tools, either directly through the System shell of the Console
			plugin, or through an Ant build file using the AntFarm plugin, you can obtain
			parsed error output that links to buffer text in the ErrorList plugin's display.
		</para>
	</answer>
</qandaentry>

</qandadiv>

</qandaset>

</sect1>

