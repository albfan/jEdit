/*
 * Open_Selection.bsh - a BeanShell macro script for the
 * jEdit text editor - opens file named by selected text
 * Copyright (C) 2001 Slava Pestov
 * Copyright (C) 2012 Jarek Czekalski
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the jEdit program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * $Id$
 *
 * Checked for jEdit 4.0 API
 *
 */

String getBrowserPath() //{{{
{
	// copied from VFSBrowser constructor
	// in 5.1 there will be VFSBrowser.getLastVisitedPath() api for that
	HistoryModel pathModel = HistoryModel.getModel("vfs.browser.path");
	if(pathModel.getSize() == 0)
		return null;
	else
		return pathModel.getItem(0);
} //}}}

/** tryPath {{{
 * Tries to open a file built as concatenation of <code>sParent</code>
 * and <code>sPath</code> paths. If file does not exist, no action is done.
 * @return <code>true</code> if file exists, <code>false</code> otherwise.
 */
boolean tryPath(String sParent, String sPath)
{
	File f = new File(sParent, sPath);
	if (f.exists())
	{
		jEdit.openFile(view, f.getPath());
		return true;
	}
	else
	{
		return false;
	}
} //}}}

/**
 * Tries to find an existing file using current java directory and
 * last browser directory as parents of the filename contained
 * in selection. If this succeeds, the file is opened.
 * Otherwise direct <code>jEdit.openFile</code> call is done on selection.
 */
void openSelection() //{{{
{
	Selection[] selection = textArea.getSelection();
	if(selection == null || selection.length == 0)
		view.getToolkit().beep();
	else
	{
		for(i = 0; i < selection.length; i++)
		{
			sSel = textArea.getSelectedText(selection[i]);
			if (!tryPath("", sSel) &&
				!tryPath(getBrowserPath(), sSel))
			{
				jEdit.openFile(view,textArea.getSelectedText(selection[i]));
			}
		}
	}
} //}}}

openSelection();

/*
	Macro index data (in DocBook format)

<listitem>
    <para><filename>Open_Selection.bsh</filename></para>
    <abstract><para>
        Opens the file named by the current buffer's selected text.
    </para></abstract>
</listitem>

*/


// end Open_Selection.bsh

// :noTabs=false:tabSize=4:indentSize=4:folding=explicit:
